{"version":3,"file":"index.umd.min.js","sources":["../src/card/Card.tsx","../src/descriptions/Descriptions.tsx","../src/empty-line/EmptyLine.tsx"],"sourcesContent":["import React from 'react';\n// import classNames from 'classnames';\nimport { Card, Typography } from 'antd';\nimport { CardProps } from 'antd/lib/card';\n\nconst { Paragraph } = Typography;\n\nexport interface IDCardProps {\n  antdProps?: CardProps;\n  copyText?: string;\n  children?: React.ReactNode;\n}\n\nconst DCard: React.FC<IDCardProps> = ({ antdProps, copyText, children }) => {\n  function renderRightExtra() {\n    if (copyText) {\n      return (\n        <Paragraph style={{ marginBottom: 0 }} copyable>\n          {copyText}\n        </Paragraph>\n      );\n    }\n\n    return false;\n  }\n\n  return (\n    <div className=\"d-card\">\n      <Card extra={renderRightExtra()} {...antdProps}>\n        {children}\n      </Card>\n    </div>\n  );\n};\n\nexport default DCard;\n","import React from 'react';\n\nexport interface IDescriptionItem {\n  title: string;\n  content: string | string[];\n}\n\nexport interface IDescriptionsProps {\n  title?: string;\n  dataSource: IDescriptionItem[];\n}\n\nconst Descriptions: React.FC<IDescriptionsProps> = props => {\n  function renderEmpty(content: string | string[]) {\n    if (!content || (Array.isArray(content) && content.length === 0)) {\n      return '- -';\n    }\n    return null;\n  }\n  return (\n    <div className=\"d-desc\">\n      {props.dataSource.length === 0 && '- -'}\n      {props.title && <div className=\"title\">{props.title}</div>}\n      {props.dataSource.map(dataItem => {\n        return (\n          <div key={`desc-${dataItem.title}`} className=\"item\">\n            <div className=\"item-title\">{dataItem.title}</div>\n            <div className=\"item-content\">\n              {renderEmpty(dataItem.content)}\n              {typeof dataItem.content === 'string'\n                ? dataItem.content\n                : dataItem.content.join('ï¼Œ')}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Descriptions;\n","import React from 'react';\n\nexport interface IEmptyLineProps {\n  height?: number;\n}\n\nconst EmptyLine = ({ height = 20 }: IEmptyLineProps) => {\n  return <div className=\"d-empty-line\" style={{ height }} />;\n};\n\nexport default EmptyLine;\n"],"names":["Paragraph","antdProps","copyText","children","React","className","extra","style","marginBottom","copyable","props","dataSource","length","title","map","dataItem","key","content","Array","isArray","join","height"],"mappings":"uwBAKQA,iDAAAA,iBAQ6B,gBAAGC,IAAAA,UAAWC,IAAAA,SAAUC,IAAAA,gBAczDC,uBAAKC,UAAU,UACbD,qBAAME,QAbJJ,GAEAE,gBAACJ,GAAUO,MAAO,CAAEC,aAAc,GAAKC,aACpCP,IAUgCD,GAClCE,oBCjB0C,SAAAO,UAQ/CN,uBAAKC,UAAU,UACgB,IAA5BK,EAAMC,WAAWC,QAAgB,MACjCF,EAAMG,OAAST,uBAAKC,UAAU,SAASK,EAAMG,OAC7CH,EAAMC,WAAWG,KAAI,SAAAC,UAElBX,uBAAKY,mBAAaD,EAASF,OAASR,UAAU,QAC5CD,uBAAKC,UAAU,cAAcU,EAASF,OACtCT,uBAAKC,UAAU,kBAdJY,EAeIF,EAASE,UAdfC,MAAMC,QAAQF,IAA+B,IAAnBA,EAAQL,OAC1C,MAEF,KAYgC,iBAArBG,EAASE,QACbF,EAASE,QACTF,EAASE,QAAQG,KAAK,WAlBjBH,mBCPL,oBAAGI,cACZjB,uBAAKC,UAAU,eAAeE,MAAO,CAAEc,kBADlB"}