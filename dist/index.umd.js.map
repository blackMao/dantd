{"version":3,"file":"index.umd.js","sources":["../src/descriptions/Descriptions.tsx","../src/card/Card.tsx","../src/empty-line/EmptyLine.tsx"],"sourcesContent":["import React from 'react';\n\nexport interface IDescriptionItem {\n  title: string;\n  content: string | string[];\n}\n\nexport interface IDescriptionsProps {\n  title?: string;\n  dataSource: IDescriptionItem[];\n}\n\nconst Descriptions: React.FC<IDescriptionsProps> = props => {\n  function renderEmpty(content: string | string[]) {\n    if (!content || (Array.isArray(content) && content.length === 0)) {\n      return '- -';\n    }\n    return null;\n  }\n  return (\n    <div className=\"d-desc\">\n      {props.dataSource.length === 0 && '- -'}\n      {props.title && <div className=\"title\">{props.title}</div>}\n      {props.dataSource.map(dataItem => {\n        return (\n          <div key={`desc-${dataItem.title}`} className=\"item\">\n            <div className=\"item-title\">{dataItem.title}</div>\n            <div className=\"item-content\">\n              {renderEmpty(dataItem.content)}\n              {typeof dataItem.content === 'string'\n                ? dataItem.content\n                : dataItem.content.join('ï¼Œ')}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Descriptions;\n","import React from 'react';\n// import classNames from 'classnames';\nimport { Card, Typography } from 'antd';\nimport { CardProps } from 'antd/lib/card';\n\nconst { Paragraph } = Typography;\n\nexport interface IDCardProps {\n  antdProps?: CardProps;\n  copyText?: string;\n  children?: React.ReactNode;\n}\n\nconst DCard: React.FC<IDCardProps> = ({ antdProps, copyText, children }) => {\n  function renderRightExtra() {\n    if (copyText) {\n      return (\n        <Paragraph style={{ marginBottom: 0 }} copyable>\n          {copyText}\n        </Paragraph>\n      );\n    }\n\n    return false;\n  }\n\n  return (\n    <div className=\"d-card\">\n      <Card extra={renderRightExtra()} {...antdProps}>\n        {children}\n      </Card>\n    </div>\n  );\n};\n\nexport default DCard;\n","import React from 'react';\n\nexport interface IEmptyLineProps {\n  height?: number;\n}\n\nconst EmptyLine = ({ height = 20 }: IEmptyLineProps) => {\n  return <div className=\"d-empty-line\" style={{ height }} />;\n};\n\nexport default EmptyLine;\n"],"names":["Descriptions","props","renderEmpty","content","Array","isArray","length","dataSource","title","map","dataItem","join","Paragraph","DCard","antdProps","copyText","children","renderRightExtra","marginBottom","EmptyLine","height"],"mappings":";;;;;;;;;;EAYA,IAAMA,YAAY,GAAiC,SAA7CA,YAA6C,CAAAC,KAAK;EACtD,WAASC,WAAT,CAAqBC,OAArB;EACE,QAAI,CAACA,OAAD,IAAaC,KAAK,CAACC,OAAN,CAAcF,OAAd,KAA0BA,OAAO,CAACG,MAAR,KAAmB,CAA9D,EAAkE;EAChE,aAAO,KAAP;EACD;;EACD,WAAO,IAAP;EACD;;EACD,SACE;EAAK,IAAA,SAAS,EAAC;EAAf,KACGL,KAAK,CAACM,UAAN,CAAiBD,MAAjB,KAA4B,CAA5B,IAAiC,KADpC,EAEGL,KAAK,CAACO,KAAN,IAAe;EAAK,IAAA,SAAS,EAAC;EAAf,KAAwBP,KAAK,CAACO,KAA9B,CAFlB,EAGGP,KAAK,CAACM,UAAN,CAAiBE,GAAjB,CAAqB,UAAAC,QAAQ;EAC5B,WACE;EAAK,MAAA,GAAG,iBAAUA,QAAQ,CAACF,KAAnB,CAAR;EAAoC,MAAA,SAAS,EAAC;EAA9C,OACE;EAAK,MAAA,SAAS,EAAC;EAAf,OAA6BE,QAAQ,CAACF,KAAtC,CADF,EAEE;EAAK,MAAA,SAAS,EAAC;EAAf,OACGN,WAAW,CAACQ,QAAQ,CAACP,OAAV,CADd,EAEG,OAAOO,QAAQ,CAACP,OAAhB,KAA4B,QAA5B,GACGO,QAAQ,CAACP,OADZ,GAEGO,QAAQ,CAACP,OAAT,CAAiBQ,IAAjB,CAAsB,GAAtB,CAJN,CAFF,CADF;EAWD,GAZA,CAHH,CADF;EAmBD,CA1BD;;;;;;;;;;;;;;;;;;;;MCPQC,wBAAAA;;EAQR,IAAMC,KAAK,GAA0B,SAA/BA,KAA+B;QAAGC,iBAAAA;QAAWC,gBAAAA;QAAUC,gBAAAA;;EAC3D,WAASC,gBAAT;EACE,QAAIF,QAAJ,EAAc;EACZ,aACE,oBAAC,SAAD;EAAW,QAAA,KAAK,EAAE;EAAEG,UAAAA,YAAY,EAAE;EAAhB,SAAlB;EAAuC,QAAA,QAAQ;EAA/C,SACGH,QADH,CADF;EAKD;;EAED,WAAO,KAAP;EACD;;EAED,SACE;EAAK,IAAA,SAAS,EAAC;EAAf,KACE;EAAM,IAAA,KAAK,EAAEE,gBAAgB;EAA7B,KAAqCH,SAArC,GACGE,QADH,CADF,CADF;EAOD,CApBD;;ECPA,IAAMG,SAAS,GAAG,SAAZA,SAAY;2BAAGC;QAAAA,kCAAS;EAC5B,SAAO;EAAK,IAAA,SAAS,EAAC,cAAf;EAA8B,IAAA,KAAK,EAAE;EAAEA,MAAAA,MAAM,EAANA;EAAF;EAArC,IAAP;EACD,CAFD;;;;;;;;;;;;;;"}